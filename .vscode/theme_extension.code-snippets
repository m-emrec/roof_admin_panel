{
	// Place your roof_admin_panel workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"create theme extension":{
		"scope": "dart",
		"prefix": "theme_extension",
		"body": [
			"context.theme.extension<${1:ThemeExtension}>()",
		]
	},

	"logger":{
		"scope": "dart",
		"prefix": "logger",
		"body": [
			"Log.${1:info}($2);",
		]
	},
	"use_case":{
		"scope": "dart",
		"prefix": "use_case",
		"body": [
	
			"import 'package:core/resources/data_state.dart';",
"import 'package:core/resources/use_case.dart';"
,
"import 'package:roof_admin_panel/features/guests/domain/entities/guest_entity.dart';",
"import 'package:roof_admin_panel/features/guests/domain/repositories/guests_repository.dart';",
"///",
"class $1UseCase extends UseCase<DataState<$2>, $3> {",
"///",
" $1UseCase(",
"   this._repository",
" );",
" final $4 _repository;",

" @override",
" Future<DataState<$2>> call($3 params) {",
   "return _repository.$5();",
" }",
"}",
	]

	},
}